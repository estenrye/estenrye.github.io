[ { "title": "Life through the eyes of Bick", "url": "/posts/three-principals-of-life/", "categories": "life", "tags": "friends, spirituality", "date": "2023-02-18 20:31:00 -0600", "snippet": "Dinner with BickTonight, I had the enormous pleasure of hosting a good friend of mine for dinnertonight. Bick was in town from Huntsville, Alabama as an expert witness for a trial.Bick and I met w...", "content": "Dinner with BickTonight, I had the enormous pleasure of hosting a good friend of mine for dinnertonight. Bick was in town from Huntsville, Alabama as an expert witness for a trial.Bick and I met while I was working at Zags. His knowledge of the insurance industryis a thing of beauty, and he was exactly the mentor I needed in that role. Tonight,we had a lovely dinner and my last remaining Bordeaux wine from France. Through allthe reminiscing, board games, and pleasant company Bick still found time to remind meagain of the three principals of life.The Three Principals of life Life is simple, people complicate it. Life is about two things, choices and relationships. Life is not about what you can get, it’s about what you can give.Spiritual InventoryBick is very spritual and his relationship with God runs deep. My own spritualrelationship with God hasn’t been something I have explored very deeply. Duringour time together I mentioned that management and team leadership isn’t necessarilywhat I set out to achieve when I joined my current employer. At that point, he broughtup the Spiritual Gifts and suggested I look into taking a Spiritual Inventory Test.He said everyone is blessed with at least one Spiritual Gift. Fewer are blessed withtwo or three, and fewer still are blessed with more than three. He said that he wouldn’tbe surprised if I had three.His task for me was to take the inventory, then take a moment of quiet reflection tolook back on the last 15 years of my life to see how my spiritual gifts put me on thepath to where I am today. Once I’d done that, then call him. After that, take anothermoment of quiet reflection to look at where I wanted to go in the next 15 years and howI would use my spiritual gifts to get there and then call him again.I decided to document my exploration here. 2023-02-18 20:30 CST: Read Take This Spiritual Gifts Test with Your Family and watched Discovering Your Family’s Spiritual Gifts. Printed this spiritual inventory test.Todo:[ ] Take Spiritual Gifts Inventory[ ] Read Romans 12:6-8[ ] Read Corinthians 12:6-10, 12:28, 12:29-30[ ] Read Ephesians 4:11[ ] Read Peter 4:11" }, { "title": "Bare Metal Kubernetes Monitoring with Cortex", "url": "/posts/designing-my-bare-metal-k8s-monitoring/", "categories": "monitoring", "tags": "prometheus, cortex", "date": "2023-02-10 23:31:00 -0600", "snippet": "References Intro to Scaling Prometheus with Cortex - Tom Wilkie, Grafana Labs &amp; Ken Haines, Microsoft", "content": "References Intro to Scaling Prometheus with Cortex - Tom Wilkie, Grafana Labs &amp; Ken Haines, Microsoft" }, { "title": "Learning About SOC2", "url": "/posts/soc2-compliance/", "categories": "security", "tags": "auditing, SOC2", "date": "2023-01-17 23:00:00 -0600", "snippet": "My SOC2 Audit Learning JourneyI am currently learning what it takes to perform a SOC2 audit. In this post, I hope to capture some of the resourcesI used to learn about SOC2 and any non-confidentia...", "content": "My SOC2 Audit Learning JourneyI am currently learning what it takes to perform a SOC2 audit. In this post, I hope to capture some of the resourcesI used to learn about SOC2 and any non-confidential experiential learnings along the way.ReferencesBooks On My Way to a SOC 2: Preparing for a SOC 2 Type 1 for Business Owners, Penny Garbus, Amazon Kindle SOC 2 Type 2 A Complete Guide - 2021 Edition AmazonVideo Learning PluralSight - Security Compliance: SOC2 YouTube - How to Prepare for SOC 2 Type 2 Audit - Webinar" }, { "title": "Teaching my Daughter to Code - Part 1", "url": "/posts/teaching-my-daughter-to-code-part-1/", "categories": "family-time", "tags": "coding-for-kids", "date": "2022-10-06 07:15:00 -0500", "snippet": "BackgroundThe past couple of days have been a lot of fun. I’ve been taking overgetting my five-year-old daughter ready for school in the morning becausemy wife has been sick. I was sitting next t...", "content": "BackgroundThe past couple of days have been a lot of fun. I’ve been taking overgetting my five-year-old daughter ready for school in the morning becausemy wife has been sick. I was sitting next to my daughter and she startedto show an interest in what I was doing. So I showed her. I explainedthe tiny bit of Ansible I was working on, and she wanted to help. So Iopened up TextEdit on my Mac M1 and let her play.Keeping in mind at this point her experience level with the keyboard islimited to playing minecraft with daddy, and that she doesn’t yet have the vocabulary to spell much I just sat next to her as she explored theaction bar color pallet and started typing rainbow gibberish. After awhile, I got the idea of giving her simple three letter words to soundout and spell while finding the letters on the keyboard and sounding outthe letters for her. This was extremely successful, and she had a bunchof fun doing it. So, today I decided let’s do something different andintroduce my daughter to the concept of teaching a computer to do somethinguseful.First stepOpen up a terminal and maximize it so that it fills the screen. This willhide distractions. Next, launch python3. Wait for child to finish gettingready for school. Then chat with the child to get them excited about tellingthe computer to do things.My daughter is a fan of the Frozen franchise. Her favorite character is Elsa.So, when I asked her what she wanted to make the computer print, her firstthought was, “iris and elsa”. So, I guided her character-by-character how toinstruct the computer in python to print “iris and elsa”.&gt;&gt;&gt; print('iris and elsa')iris and elsaThe next step was to have her tell the computer to do it again. So we did itagaion a few times…&gt;&gt;&gt; print('iris and elsa')iris and elsa&gt;&gt;&gt; print('iris and elsa')iris and elsa&gt;&gt;&gt; print('iris and elsa')iris and elsaNext Step, Tell the Computer to Count ElsasNext, I said to my daughter, that telling the computer to do the same thingover and over again seemed like a lot of work. Maybe we could tell thecomputer to do something 5 times, like counting Elsas. I asked her if sheknew what a loop was, and she said “it’s like a circle”. I replied, yes aloop is a set of things that repeat a set number of times over and over again.Then I asked, should we write a loop that counts Elsas? Do you want to printthe number of Elsas before or after her name? “After” my daughter saysexcitedly. How many Elsa’s do we want the computer to count? “Nine” my daughtersays. Here’s the loop we came up with.&gt;&gt;&gt; for i in range(1,9):... print(f'elsa {i}')...elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7elsa 8What happened? How many Elsas got printed? “Eight” my daughter says. But,we wanted nine Elsas. What do you think will happen if we put 8 in for therange?&gt;&gt;&gt; for i in range(1,8):... print(f'elsa {i}')...elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7Wow, this time we got 7 Elsas. If 8 got us 7 Elsas, and 9 got us 8 Elsas,what number do we need to get 9 Elsas? “Ten!” my daughter exclaims.&gt;&gt;&gt; for i in range(1,10):... print(f'elsa {i}')...elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7elsa 8elsa 9“What happens if we use 11?” my daughter asks.&gt;&gt;&gt; for i in range(1,11):... print(f'elsa {i}')...elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7elsa 8elsa 9elsa 10“What about 12?” she asks again.&gt;&gt;&gt; for i in range(1,12):... print(f'elsa {i}')...elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7elsa 8elsa 9elsa 10elsa 11Teaching the Computer to Count ElsasI tell my daughter, that it seems like a lot of work telling the computer allof the instructions to count Elsas over and over again. Maybe we couldteach the computer to count Elsas for us. Maybe we could make it so that itwill give us exactly the number of Elsas we tell it to. “Yeah!” my daughterexclaims. I explain that a function is how we teach the computer newcommands it can execute. We decided the name of the function should becount_elsas. I then explained that we needed a variable n to hold thenumber of elsas we wanted the computer to count. We copied our previous functioncode and I asked her what the difference was between how many Elsas we told thecomputer to print and the number of Elsas that got printed. Twelve minus elevenequals? “One” my daughter exclaims. I explained how we tell that to the computer.This is the function we came up with.&gt;&gt;&gt; def count_elsas(n):... for i in range(1,(n+1)):... print(f'elsa {i}')...What happened? Why didn’t the computer print any Elsas? “I don’t know” my daughterresponds. I explain that we only told the computer how to count Elsas, we didn’t askit to count any Elsas. How many Elsas should we tell the computer to count?“Twelve!” my daughter exclaims.&gt;&gt;&gt; count_elsas(12)elsa 1elsa 2elsa 3elsa 4elsa 5elsa 6elsa 7elsa 8elsa 9elsa 10elsa 11elsa 12ConclusionI had a lot of fun this morning spending time with my daughter sharing my passion.While she isn’t able to write any of this code on her own yet, she’s been exposed tothe following computer science primatives: Output Loops Functions InputAs I was taking her to school this morning, she told me “I want to be a computer guy likeyou when I grow up”. I told her that she can definitely become a computer scientist whenshe grows up and we booked it to school." }, { "title": "homelab - feature flagging", "url": "/posts/flagd-crd/", "categories": "home-lab, feature-flagging", "tags": "open-feature", "date": "2022-09-23 00:00:00 -0500", "snippet": "References’ https://capi-samples.github.io/kubecon-na-2022-tutorial/docs/prereqs/ https://cluster-api.sigs.k8s.io/ https://openfeature.dev/ https://github.com/open-feature/flagd", "content": "References’ https://capi-samples.github.io/kubecon-na-2022-tutorial/docs/prereqs/ https://cluster-api.sigs.k8s.io/ https://openfeature.dev/ https://github.com/open-feature/flagd" }, { "title": "OBS Streaming Configuration", "url": "/posts/obs-streaming-configuration/", "categories": "streaming, tools", "tags": "obs", "date": "2022-09-23 00:00:00 -0500", "snippet": "PluginsTuna https://github.com/univrsal/tuna/releases/tag/v1.8.4 https://obsproject.com/forum/resources/tuna.843/ https://www.youtube.com/watch?v=R-ws6K6e5GIAudio Monitor https://obsproject.com...", "content": "PluginsTuna https://github.com/univrsal/tuna/releases/tag/v1.8.4 https://obsproject.com/forum/resources/tuna.843/ https://www.youtube.com/watch?v=R-ws6K6e5GIAudio Monitor https://obsproject.com/forum/resources/audio-monitor.1186/" }, { "title": "Invoicing my Family - Tool Evaluation", "url": "/posts/invoicing-software-for-family-tech-services/", "categories": "home-lab, invoicing", "tags": "invoicing", "date": "2022-09-23 00:00:00 -0500", "snippet": "https://opensourcebilling.org/https://github.com/vteams/open-source-billingLook into reserved instances for AWS for Ubiquiti controller and possiblelybilling software.", "content": "https://opensourcebilling.org/https://github.com/vteams/open-source-billingLook into reserved instances for AWS for Ubiquiti controller and possiblelybilling software." }, { "title": "Building tools.rye.ninja - My Network Tools Server", "url": "/posts/building-tools-rye.ninja/", "categories": "home-lab, tools", "tags": "tools", "date": "2022-09-23 00:00:00 -0500", "snippet": "Next Steps[x] Install apt mirror[x] Mirror Ubuntu Releases[x] Install pihole[x] Install Netbox[x] Install Nitrokey HSM tooling[ ] Create a custom step apt repository for step deb packages[ ] Instal...", "content": "Next Steps[x] Install apt mirror[x] Mirror Ubuntu Releases[x] Install pihole[x] Install Netbox[x] Install Nitrokey HSM tooling[ ] Create a custom step apt repository for step deb packages[ ] Install step cli[ ] Install step-kms-plugin[ ] Install Step Certificates[ ] Configure Shoelaces[ ] Configure pihole DHCP settings[ ] Install Cert-bot[ ] Install Unifi Controller[ ] Install HAProxy[x] Automate Pi-Hole installHardwareHere’s a list of the hardware I used. Supermicro 1U Server 4 GB RAM Nitrokey HSM2Network ConfigurationInstallFirst step was to install and configure keepalivedhttps://keepalived.readthedocs.io/en/latest/installing_keepalived.htmlhttps://www.redhat.com/sysadmin/keepalived-basicsKeepalived configurationvrrp_instance VI_1 { state MASTER interface enp2s0.61 virtual_router_id 141 priority 255 advert_int 1 authentication { auth_type PASS auth_pass 346728 } virtual_ipaddress { 10.5.7.2/16 }}https://linuxhint.com/pxe_boot_ubuntu_server/https://linuxhint.com/install_tftp_server_ubuntu/Tools.Rye.Ninja PiHole Admin Apt Mirror NetboxTools IP Subnet CalculatorReferencesdnsmasq archlinux - dnsmasq - DocumentationPi-Hole Pi-Hole Discourse - Pihole not directing clients to PXE Server Reddit - How to set up a PXE Boot Option with Pihole? Reddit - How to use the Pi-Hole DHCP server for pxe boot? A Cloud Guru - Implement and Configure a PXE Boot Server Pi-Hole Documentation - Basic Install Pi-Hole Discourse - What is setupVars.conf and how do I use it? Pi-Hole Discourse - PiHole as DHCP and DNS for multiple VLANs &amp; subnets Pi-Hole Discourse - Pi-hole as part of a post-installation script StackExchange - Unix &amp; Linux - Install Pi-Hole without user interaction?PXE Boot Danny Payne - Building a PXE Boot Server LinuxHint - Configuring PXE Network Boot Server on Ubuntu 22.04 LTS ipxe.org - chainloading ipxe.org - download LinuxHint - Ubuntu - Installing and Configuring TFTP Server on UbuntuShoelaces ThousandEyes Engineering - Open-Sourcing Shoelaces: A Tool for Unmanned Server Bootstrapping Github - thousandeyes - shoelaces Github - estenrye - shoelacesNetbox Netbox - Installation YouTube - System MTU One - Netbox Guided Install - v2.9.9 on Ubuntu 20.04.1 LTSSmallstep step-kms-plugin Step-CA - Documentation - Configuring PostgresqlAutheilia Autheilia - LDAP - IntroductionUnifi Controller Github - davecoutts - unify_ubuntu_2004.sh PiMyLifeUp - Installing the UniFi Controller on UbuntuHAProxy LinuxHint - Ubuntu - How to install and configure HAproxy on Ubuntu 20.04 LTSApt Repository Medium - Sqooba - Create your own custom and authenticated APT repository Debian Bug report logs - #322483 - apt-utils: please include an example for apt-ftparchive generateVLAN Lifewire - What is a Virtual LAN (VLAN)Keepalived Keepalived - Documentation - Installing keepalived RedHat - keepalived basicsNitrokey HSM2 Nitrokey - HSM2 - Docs Getting Started with the Nitrokey HSM 2 Using the Nitrokey HSM with GPG in macOS M of N Setup with NitroKey HSM Nitrokey Start: Getting started guide (gnuk openpgp token) Using OpenPGP subkeys in Debian developmentAnsible DocumentationCollections ansible.builtin ansible.posix community.crypto community.general community.postgresql kubernetes.core netbox.netbox" }, { "title": "bare metal lab prep", "url": "/posts/bare-metal-lab-prep/", "categories": "home-lab, notes", "tags": "bare-metal", "date": "2022-09-17 00:00:00 -0500", "snippet": "References https://www.youtube.com/watch?v=QyGHZ2HCwqY&amp;t=440s https://linuxhint.com/pxe_boot_ubuntu_server/ https://wiki.openstack.org/wiki/Openstack-helm https://opendev.org/openstack/open...", "content": "References https://www.youtube.com/watch?v=QyGHZ2HCwqY&amp;t=440s https://linuxhint.com/pxe_boot_ubuntu_server/ https://wiki.openstack.org/wiki/Openstack-helm https://opendev.org/openstack/openstack-helm Automatic TLS in Kubernetes The Hard Way https://github.com/smallstep/kubernetes-the-hard-way/tree/master/docs" }, { "title": "Configuring Highly Available LDAP in an Airgapped Environment", "url": "/posts/researching-ha-ldap-for-airgap-environment/", "categories": "homelab, ldap, airgap", "tags": "cd-homelab, automate-someday, work-in-progress", "date": "2022-09-10 07:14:00 -0500", "snippet": "Open Questions Should I host my LDAP services on the Bare Metal Kubernetes controlplane nodes? Should I host LDAP services in my Kubernetes Cluster, rather than as a systemd service? If I host a...", "content": "Open Questions Should I host my LDAP services on the Bare Metal Kubernetes controlplane nodes? Should I host LDAP services in my Kubernetes Cluster, rather than as a systemd service? If I host as a systemd service, which virtual ip routing solution should I use? keepalived? Tool I am most familiar with. pacemaker? Based on Heartbeat. Reference MaterialJournals Highly Available LDAP by Jay D. Allen on November 30, 2002,Linux Journal" }, { "title": "Configuring Centralized Logging in an Airgapped Environment", "url": "/posts/researching-centralized-logging/", "categories": "homelab, logging, airgap", "tags": "cd-homelab, automate-someday, work-in-progress", "date": "2022-09-10 07:14:00 -0500", "snippet": "Open Questions What open-source log aggregation software should I use? Elastic-Fluent-Kibana (EFK)? Grafana Loki? What system logs are important to collect? Which ones are...", "content": "Open Questions What open-source log aggregation software should I use? Elastic-Fluent-Kibana (EFK)? Grafana Loki? What system logs are important to collect? Which ones are noise? Which log collection daemon do I want to use? Fluentd? Fluentbit? Elastic Filebeat? syslog? journald? " }, { "title": "Podcast Listening Notes", "url": "/posts/more-random-car-ride-thoughts/", "categories": "notes", "tags": "random-thoughts-and-ideas", "date": "2022-09-10 07:14:00 -0500", "snippet": "PodcastsI have decided to listen through the backlog of the Kubernetes Podcast by Googleon my drive to my future brother-in-law’s bachelor party.Listened to the following podcasts https://kubernet...", "content": "PodcastsI have decided to listen through the backlog of the Kubernetes Podcast by Googleon my drive to my future brother-in-law’s bachelor party.Listened to the following podcasts https://kubernetespodcast.com/episode/003-gvisor/ Questions for later: Should I implement gVisor in an air-gapped environment? What type of workloads require this level of isolation? Kubernetes provides a means to select the container runtime environment,add gVisor as a capability to play with it eventually? https://kubernetespodcast.com/episode/005-documentation/ Currently my notes site is Jekyll based. Should I consider migrating to Hugo at some point? Primary reason for Kubernetes docs to migrate from Jekyll to Hugowas for performance as the site grew in scale. https://kubernetespodcast.com/episode/006-skaffold/ Should I include Skaffold in my development toolset? Skaffold is a command line tool that facilitates continuous development for Kubernetes applications. You can iterate on your application source code locally then deploy to local or remote Kubernetes clusters. Skaffold handles the workflow for building, pushing and deploying your application. It also provides building blocks and describe customizations for a CI/CD pipeline. How does this compare to a tool like ArgoCD? https://kubernetespodcast.com/episode/007-kustomize-with-a-k/ https://kubernetespodcast.com/episode/008-security/ https://kubernetespodcast.com/episode/009-sre/" }, { "title": "Configuring AWS SSO with JumpCloud SAML Integration", "url": "/posts/configure-aws-saml-auth-with-jumpcloud-sso/", "categories": "homelab, aws, saml, jumpcloud, SSO", "tags": "cd-homelab, automate-someday", "date": "2022-09-09 04:14:00 -0500", "snippet": "Prerequisites Sign up for a free JumpCloud Account Sign up for a free AWS Account After signing up for AWS, note your AWS Account Number. Define a Naming Convention for custom user attributes t...", "content": "Prerequisites Sign up for a free JumpCloud Account Sign up for a free AWS Account After signing up for AWS, note your AWS Account Number. Define a Naming Convention for custom user attributes that will be used togrant AWS Role Permissions in JumpCloud. The resulting values should beunique across AWS Accounts and Roles. Example Naming Convention: AWS&lt;&lt;AWS_Account_Number&gt;&gt;&lt;&lt;AWS_Role_Name&gt;&gt; Example Attribute Name: AWS673127022430ADM Configuring JumpCloud SSO Application Browse to the JumpCloud Admin Console and authenticate with Administrator credentials. Click SSO Click the Plus button to configure a New SSO Application. Search for AWS Click Configure next to Amazon Web Services (IAM). On the General Info tab, provide a Display Label. On the SSO tab, click add attribute under the USER ATTRIBUTE MAPPING section for each Account/Role custom user attribute. For all attributes added, use https://aws.amazon.com/SAML/Attributes/Role for the Service Provider Attribute Name and the Account/Role custom user attribute as the JumpCloud Attribute Name. Example: Service Provider Attribute Name: https://aws.amazon.com/SAML/Attributes/Role JumpCloud Attribute Name: AWS673127022430ADM On the SSO tab, under the CONSTANT ATTRIBUTES section: Delete the default https://aws.amazon.com/SAML/Attributes/Role attribute. Change the https://aws.amazon.com/SAML/Attributes/SessionDuration attribute to 43200 seconds (12 hours) Click Activate to create the JumpCloud SSO Application Select the newly created JumpCloud SSO Application and click export metadata to download the Identity Provider Metadata XML file.Configure a new Identity Provider in AWS Identity and Access Management (IAM) Browse to the AWS Admin Console. Log in with Administrative Credentials. Under Services, select IAM. In the Identity and Access Management (IAM) dashboard,click Identity providers. Click Add provider. Choose SAML for the Provider type. Choose a meaningful Provider name. Click Choose file to browse to the downloaded Identity Provider Metadata XML file. Add tags to facilitate searching and identification. Example: Tag Name: IdentityProvider Tag Value: JumpCloud Click Add Provider. Click the newly created Identity Provider. Copy the Identity Provider’s ARN.Configure a new IAM Role to be assumed by SAML Identities in AWS Identity and Access Management (IAM) Browse to the AWS Admin Console. Log in with Administrative Credentials. Under Services, select IAM. In the Identity and Access Management (IAM) dashboard,click Roles. Click Create role. Select AWS account for the Trusted entity type. Specify the AWS Account Number. Click Next. Add required permissions to the role. To create an Administrator role: Search for the AdministratorAccess policy. Click the checkbox next to the AdministratorAccess policy. Click Next. Provide a meaningful Role name. Click Edit on Step 1: Select trusted entities. For Trusted entity type choose SAML 2.0 federation. For SAML 2.0-based provider select the Identity Provider you created in the previous section. Select Allow programmatic and AWS Management Console Access. Click Next. Click Next. Add tags to facilitate searching and identification. Example: Tag Name: IdentityProvider Tag Value: JumpCloud Click Create role. Click View role on the green notification bar. Copy the Role’s ARN.Configure JumpCloud Group custom user attributes. Browse to the JumpCloud Admin Console and authenticate with Administrator credentials. Click User Groups Click the Plus button to create a new group. On the Details tab: Provide a meaningful name. Click add new custom attribute in the Custom Attributes section and select String Add Custom Attributes for each AWS IAM Role being granted to the Group. For Attribute Name provide an AWS Account/Role custom attribute value. Example: AWS673127022430ADM For Attribute Value provide a comma delimited list containing both the AWS Role ARN and the AWS Identity Provider ARN. Example: arn:aws:iam::673127022430:role/JumpCloud-SSO-Administrator-Access,arn:aws:iam::673127022430:saml-provider/JumpCloud Repeate for each AWS IAM Role. On the Users tab, select which users should be granted AWS access. On the Applications tab, grant the group access to the AWS SSO application. Click SaveTest your work by logging into the AWS Dashboard using JumpCloud SSO. Browse to the JumpCloud User Console Click the AWS tile. Select the Role you want to assume.Configure saml2aws for command line access.brew install saml2awssaml2aws configure \\ --idp-account=ryezone-com \\ --url=https://sso.jumpcloud.com/saml2/aws-rzlbs \\ --idp-provider=JumpCloud \\ --mfa=WEBAUTHN \\ --profile=ryezone-comsaml2aws login \\ --idp-account=ryezone-com \\ --profile=ryezone-com \\ --region=us-east-2 \\ --role=arn:aws:iam::673127022430:role/JumpCloud-SSO-Administrator-Access \\ --cache-saml \\ --skip-prompt \\ --force" }, { "title": "Cell Booster Research", "url": "/posts/research-cell-booster/", "categories": "networking, cellphone", "tags": "cell-booster", "date": "2022-09-04 13:14:00 -0500", "snippet": "Reference NotesNotes Need to know what bands the towers are using. Use an app to figure it out. Note what bands the booster supports.Apps Cell Mapper OpenSignal Network Cell Info LiteYouTube ...", "content": "Reference NotesNotes Need to know what bands the towers are using. Use an app to figure it out. Note what bands the booster supports.Apps Cell Mapper OpenSignal Network Cell Info LiteYouTube Videos How To Boost Your Cell Phone Signal I Hate This… New House Cel-Fi Cell Repeater Install How To Setup A Cell Phone Signal Booster For Verizon, AT&amp;T, Sprint, T-Mobile, US Cellular And More How to Find a Cell Tower using the OpenSignal App - weBoost Installing the Outside Antenna - Cell Phone Signal Booster Home Install Series (2 of 6) - weBoostProducts Waveform Digital booster HiBoost Cell Phone Signal Booster, Support up to 8,000 sq ft, Upgrade Kit with 2 Indoor Antennas, APP Support, 4G 5G LTE Data for All US Carriers -Verizon, AT&amp;T, T-Mobile, Sprint ect, FCC Approved 68 dB maximum gain two indoor antennas Wilson Electronics Pole Mount for weBoost Outside Home Antenna - 901117 - 10” length" }, { "title": "Rook/Ceph Background Research", "url": "/posts/researching-rook/", "categories": "homelab, rook, storage, baremetal, kubernetes", "tags": "cd-homelab, work-in-progress", "date": "2022-09-04 04:15:00 -0500", "snippet": "Rook Implementation Research NotesVideos YouTube - Getting Started with Rook The Linux Foundation January 07, 2020 Covers: Installing rook Setting up d...", "content": "Rook Implementation Research NotesVideos YouTube - Getting Started with Rook The Linux Foundation January 07, 2020 Covers: Installing rook Setting up device usage Setting up storage class Setting up PVC YouTube - Tuesday Tech Tip - Intro to Ceph Clustering Part 1 - When to Consider It 45 Drives May 26, 2020 YouTube - Tuesday Tech Tip - Intro to Ceph Clustering Part 2 - How Ceph Works 45 Drives June 02, 2020 YouTube - Tuesday Tech Tip - Intro to Ceph Clustering Part 3 - Data Security 45 Drives June 09, 2020 YouTube - Tuesday Tech Tip - Intro to Ceph Clustering Part 4 - Self Balancing and Self Healing 45 Drives June 16, 2020 YouTube - Intro to Rook: Storage for Kubernetes Jared Watts, Upbound &amp; Alexander Trost, Cloudical September 04, 2020 YouTube - Performance Optimization – Rook on Kubernetes Mark Darnell &amp; Ryan Tidwell, SUSE September 04, 2020 YouTube - Getting started with ceph storage cluster setup Daniel Persson October 25, 2020 YouTube - Tuesday Tech Tip - Ceph Deployment Tools 45 Drives November 17, 2020 YouTube - Rook: Intro and Ceph Deep Dive Blaine Gardner, Red Hat / Satoru Takeuchi, Cybozu, Inc. May 14, 2021 YouTube - Tuesday Tech Tip - The Simplest Way to Build a Ceph Cluster 45 Drives August 17, 2021 YouTube - Kubernetes Fortnight: Solving storage in Kubernetes with the Rook operator Platform9 Systems, Inc. Chris Jones / Anup Barve August 19, 2021 Covers: High Level Overview and Key topics around Rook and Ceph YouTube - ROOK – Ceph Backed Object Storage for Kubernetes Install and Configure Anthony Spiteri September 03, 2021 YouTube - Tuesday Tech Tip - Tuning and Benchmarking for your Workload with Ceph Mitch / 45Drives October 26, 2021 Covers: Performance Tuning IOPS and Throughput Benchmarks on Underlying Disks Network Performance Testing with iPerf Latency tests between the nodes. tuned for getting servers performing with lowest possible latency YouTube - Rook: Intro and Ceph Deep Dive Travis Nielsen, Sebastien Han, Blaine Gardner &amp; Satoru Takeuchi October 29, 2021 YouTube - How to set up a cluster with CephAdm Daniel Persson January 17, 2022 YouTube - Introduction to Rook Red Hat Developer Travis Nielson / Rook Maintainer / Red Hat May 10, 2022 YouTube - Rook in the cloud or on-prem? Red Hat Developer Travis Nielson / Rook Maintainer / Red Hat May 10, 2022 YouTube - Getting started with Rook Red Hat Developer Travis Nielson / Rook Maintainer / Red Hat May 10, 2022 YouTube - Installing Rook in an AWS cluster Red Hat Developer Travis Nielson / Rook Maintainer / Red Hat May 10, 2022 Tutorials How to Deploy Rook with Ceph as a Storage Backend for your Kubernetes Cluster using CSIBlog Posts Production-grade Deployment of PVC-based Rook/Ceph Cluster RedHat article on low-latency performance tuningQuestions How can I set up encryption at rest in Ceph? How do I craft a backup strategy for ceph? Can backup be managed at the Ceph level?Fun tools I found along the way asciinema (Terminal Recording Tool) asciinema-server for self-hosted publishing asciinema-player for embedding in a website BenchmarkingBenchmark disks that will eventually make up the OSDsIOPS BenchmarkFirst step is to get a baseline understanding of the disk’s IOPS.BLOCK_DEVICE=/dev/sdl# Get a baseline on the disk's IOPSfio --filename=${BLOCK_DEVICE} \\ --direct=1 \\ --fsync=1 \\ --rw=randwrite \\ --bs=4k \\ --numjobs=1 \\ --iodepth=1 \\ --runtime=60 \\ --time_based \\ --group_reporting \\ --name=4k-sync-write-testTake Note of the IOPS returned. Track repeated benchmarks with the samemodel of drive over and over to get a good understanding of how the drive isgoing to perform, noting any variance between the tests. It’s important toensure that the variance of the IOPS of the disks in the system is not wildlydifferent between disks.Throughput BenchmarkNext step is to run a throughput benchmark on each of the drives. The keymetric in this test is the Bandwidth (BW) metric. Repeat this test for eachdrive.BLOCK_DEVICE=/dev/sdlfio --filename=${BLOCK_DEVICE} \\ --direct=1 \\ --fsync=1 \\ --rw=write \\ --bs=1M \\ --numjobs=1 \\ --iodepth=1 \\ --runtime=60 \\ --time_based \\ --group_reporting \\ --name=1M--sync-throughput-testBenchmark the network that our storage cluster will communicate over.Make sure the network bandwidth is where it should be. Ensure retransmissionrate is not high and congestion window is not too small.Select a node to be the server in this test.Install iperf3 on client and serversudo apt install -y iperf3On the ServerFirst we are going to configure iperf3 on the server to listen on port 5201.SERVER_IP_ADDRESS=192.168.200.2iperf3 -B ${SERVER_IP_ADDRESS} -sOn the ClientNext we need to configure iperf3 on the client to connet to the server.Note that we are explictly telling iperf3 which interface we are using toperform the test. This is important because the ceph cluster may have multipleinterfaces which may be configured for frontend/backend traffic.SERVER_IP_ADDRESS=192.168.200.2CLIENT_IP_ADDRESS=192.168.200.3# Test from client ==&gt; serveriperf3 -B ${CLIENT_IP_ADDRESS} -c ${SERVER_IP_ADDRESS}# Test from server ==&gt; clientiperf3 -B ${CLIENT_IP_ADDRESS} -c ${SERVER_IP_ADDRESS} -RThere are two metrics we are interested in looking at. Retransmission: the number of times the sender needed to resend the packetbefore it was actually accepted. Smaller numbers are better. Congestion Window: the amount of data that can be sent without having to getan ACk sent back. Larger numbers are better, ideally around 1 MB.Repeat this test on all nodes and interfaces that will be part of the Ceph cluster.Get an idea of any packet errors or drops.netstat -i | column -tThis will give us an overview of the following: RX-OK: Received packets that were OK. RX-ERR: Any packets received that errored. RX-DRP: Any packets that were dropped. TX-OK: Sent packets that were OK. TX-ERR: Any packets sent that errored. TX-DRP: Any packets sent that dropped.It’s good to monitor these statistics over time to see if the network is seeingany kind of drops or issues.Perform a ping test to get a feel for latency between the nodes.SERVER_IP_ADDRESS=192.168.200.2ping ${SERVER_IP_ADDRESS}Ceph performance hinges on network latency being as low as possible.Tuning the system for low latencyIn this section we want to disable some of the deeper c-states (idle states)and tune the CPU’s p-states for peak performance and getting peak boost clocks.Using the tuned tool we an set in place multiple, meaningful tunings by enablingspecific tuning profiles. For Ceph, we want to use the network-latency profile.Make sure BIOS isn’t going to clobber your settingsUsing tuned to tune the system# List tuning profilestuned-adm list# take a look at latency-performance configurationsegrep -v '^$|^\\#|\\[' /usr/lib/tuned/latency-performance/tuned.conf# take a look at the network-latency configurationsegrep -v '^$|^\\#|\\[' /usr/lib/tuned/network-latency/tuned.conf# set network-latency as the active profile.tuned-adm profile network-latency# confirm network-latency profile is the active profilecat /etc/tuned/active_profileVerify the tuning profile has been appliedMake sure after applying the tuned profile and restarting the machine that allof the CPU cores are 100% in the C1 state and not in any of the deeper c-stateswhich cause additional latency, reduce the impact of power management, reducetask migrations and reduce the amount of outstanding dirty pages kept in memory.These changes will result in a higher power draw!turbostat sleep 5" }, { "title": "Branding sslip.io to a Cloudflare hosted DNS Subdomain", "url": "/posts/branding-sslip-to-cloudfare-dns-subdomain/", "categories": "livestream, cloudflare, dns, dynamic-dns", "tags": "dns, sslip.io", "date": "2022-07-21 19:35:00 -0500", "snippet": "What is sslip.io?sslip.io is a free DNS service that, when queried with a hostnamewith an embedded IP address returns that IP address. It was inspired by xip.io whichwas created by Sam Stephenson ...", "content": "What is sslip.io?sslip.io is a free DNS service that, when queried with a hostnamewith an embedded IP address returns that IP address. It was inspired by xip.io whichwas created by Sam Stephenson when he worked atBasecamp.Why use sslip.io?As I write this, I am on a Delta flight to San Jose, CA. I have 3 hours until I land,and I want to deploy some of my common Kubernetes platform tooling to my Rancher Desktop local Kubernetes instance. Part of my tooling uses cert-manager to issue my services free, trustedLetsEncrypt certificates. This works great as long as one of two thingsare true: You have a publicly queriable DNS name that returns a valid public IP that resolves toyour machine for an HTTP-01 challenge. You have a public DNS that cert-manager can write to for a DNS-01 challenge.Another reason I want to use this tool is that I heavily use Ingress in my Kubernetesdevelopment. Kubernetes Ingress uses the DNS name and http path to route traffic to theappropriate service. I also don’t want to have to edit my Cloudflare DNS every time Ihop onto a new wifi network.Lastly, I am curious if I can actually satisfy an HTTP-01 challenge while in the air.First things first, branding sslip.ioThis step is completely optional. I just wanted to see if I could do it. If you don’thave a Cloudflare hosted DNS with appropriate permissions to modify it, feel free toskip this section. The rest of this tutorial will function just fine without it.This first bit of code will create the NS records for sslip.io in my a.rye.ninjasubdomain. Note that you will need to substitute your Cloudflare API token andZone Id for my 1Password cli commands.OP_ACCOUNT='ryefamily.1password.com'OP_VAULT='Home_Lab'OP_ITEM='cloudflare_api_token_a'CLOUDFLARE_API_TOKEN=`op item get ${OP_ITEM} --account ${OP_ACCOUNT} --vault ${OP_VAULT} --fields password`CLOUDFLARE_ZONE_ID=`op item get ${OP_ITEM} --account ${OP_ACCOUNT} --vault ${OP_VAULT} --fields zone_id`curl -X POST \"https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/dns_records/\" \\ -H \"Authorization: Bearer $CLOUDFLARE_API_TOKEN\" \\ -H \"Content-Type: application/json\" \\ --data '{\"type\":\"NS\",\"name\":\"a\",\"content\":\"ns-aws.sslip.io.\",\"proxied\":false,\"ttl\":\"120\"}' | jqcurl -X POST \"https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/dns_records/\" \\ -H \"Authorization: Bearer $CLOUDFLARE_API_TOKEN\" \\ -H \"Content-Type: application/json\" \\ --data '{\"type\":\"NS\",\"name\":\"a\",\"content\":\"ns-gce.sslip.io.\",\"proxied\":false,\"ttl\":\"120\"}' | jqcurl -X POST \"https://api.cloudflare.com/client/v4/zones/${CLOUDFLARE_ZONE_ID}/dns_records/\" \\ -H \"Authorization: Bearer $CLOUDFLARE_API_TOKEN\" \\ -H \"Content-Type: application/json\" \\ --data '{\"type\":\"NS\",\"name\":\"a\",\"content\":\"ns-azure.sslip.io.\",\"proxied\":false,\"ttl\":\"120\"}' | jqAfter executing the above commands, you should be able to query the new DNS service.dig 127-0-0-1.a.rye.ninja +shortYou should get the following response.127.0.0.1Tools you will need for the tutorialYou’ll need Rancher Desktop installedbrew install rancher-desktopIf you haven’t already cloned my cd-homelabrepository, you should probably go do that now.It has a Brewfile that will help you install all the tools necessary to work throughthe remainder of this tutorial.git clone https://github.com/estenrye/cd-homelab.gitcd cd-homelabbrew bundleDisabling the default Traefik Ingress ControllerRancher Desktop ships with Traefik as its default Ingress Controller. This isn’twhat I want in my environment so I am going to disable it to free up ports 80 and443 for the ingress-nginx Ingress ControllerTODO: Write Instructions for this.Deploying Ingress-Nginx to my Local Kubernetes ClusterIn this section we’ll deploy an ingress controller to our local Kubernetes cluster.This is necessary as it will both allow traffic into the cluster and serve ourHTTP-01 challenges for LetsEncrypt.helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginxhelm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \\ --namespace ingress-nginx --create-namespaceOnce everything finishes deploying, you should be able to curl localhost on port 80.curl http://localhostYou should get the following output.&lt;html&gt;&lt;head&gt;&lt;title&gt;404 Not Found&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;center&gt;&lt;h1&gt;404 Not Found&lt;/h1&gt;&lt;/center&gt;&lt;hr&gt;&lt;center&gt;nginx&lt;/center&gt;&lt;/body&gt;&lt;/html&gt;Deploying cert-manager to my Local Kubernetes ClusterNext step is to install cert-manager and its respective custom resourcedefinitions. To do that, run the following helm command.helm repo add cert-maanger https://charts.jetstack.iohelm upgrade --install \\ cert-manager cert-manager/cert-manager \\ --namespace cert-manager \\ --create-namespace \\ --version v1.9.1 \\ --set installCRDs=trueNow that we have cert-manager and its CRDs installed, now we need to configure aClusterIssuer object. The following yaml will create the required object.apiVersion: cert-manager.io/v1kind: ClusterIssuermetadata: name: example-issuer namespace: cert-managerspec: acme: server: https://acme-staging-v02.api.letsencrypt.org/directory privateKeySecretRef: name: example-issuer-account-key solvers: - http01: ingress: class: nginx" }, { "title": "Installing Proxmox", "url": "/posts/installing-proxmox/", "categories": "notes, proxmox", "tags": "pve", "date": "2022-07-21 19:35:00 -0500", "snippet": "Configure Network", "content": "Configure Network" }, { "title": "Setting up Multicluster Monitoring", "url": "/posts/setting-up-multi-cluster-monitoring/", "categories": "monitoring", "tags": "cortex", "date": "2022-07-21 19:35:00 -0500", "snippet": "References Cortex 101: Horizontally Scalable Long Term Storage for Prometheus - Chris Marchbanks, Splunk PromCon EU 2019: Two Households, Both Alike in Dignity: Cortex and Thanos Intro: Cortex -...", "content": "References Cortex 101: Horizontally Scalable Long Term Storage for Prometheus - Chris Marchbanks, Splunk PromCon EU 2019: Two Households, Both Alike in Dignity: Cortex and Thanos Intro: Cortex - Tom Wilkie, Grafana Labs &amp; Bryan Boreham, Weaveworks Deep Dive: Cortex - Tom Wilkie, Grafana Labs &amp; Bryan Boreham, Weaveworks Monitoring Kubernetes with Prometheus – Tom Wilkie Intro to Scaling Prometheus with Cortex - Tom Wilkie, Grafana Labs &amp; Ken Haines, Microsoft Cortex: Intro and Production Tips - Bryan Boreham, Grafana Labs &amp; Alvin Lin, Amazon Web Services Cortex: Multi-tenant Scalable Prometheus - Bryan Boreham, Weaveworks &amp; Jacob Tlisi, Grafana Labs Platform9: Kubernetes Monitoring at Scale with Prometheus and Cortex Simplifying Kubernetes Monitoring with PrometheusDocumentation Cortex Docs: cortex-helm-chart Cortex Docs: ArchitectureComponents S3 for storageManagement Cluster ingress-nginx cert-manaager nfs-csi sealed-secrets external-dns argocd etcd minio-operator prometheus cortex" }, { "title": "Deploying Sealed Secrets With ArgoCD", "url": "/posts/deploy-sealed-secrets-with-argocd/", "categories": "notes, argocd, secrets, kubernetes", "tags": "continuous-delivery, argocd, secrets, kubernetes", "date": "2022-07-21 19:35:00 -0500", "snippet": "References [Github Bitnami/Sealed-Secrets Helm Install Docs](https://github.com/bitnami-labs/sealed-secrets#helm-chart) ...", "content": "References [Github Bitnami/Sealed-Secrets Helm Install Docs](https://github.com/bitnami-labs/sealed-secrets#helm-chart) [Github ExternalDNS](https://github.com/kubernetes-sigs/external-dns/tree/master/charts/external-dns) [Github ExternalDNS Setting up ExternalDNS for Services on Cloudflare](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/cloudflare.md) [Github ExternalDNS Setting up ExternalDNS on GKE with nginx-ingress-controller](https://github.com/kubernetes-sigs/external-dns/blob/master/docs/tutorials/nginx-ingress.md) [Github ingress-nginx ExternalDNS Service Configuration](https://github.com/kubernetes/ingress-nginx/blob/2843bb264f5d31b2ed2514c300c65c33aca2557a/charts/ingress-nginx/README.md#externaldns-service-configuration) Sealed Secrets: Protecting your passwords before they reach Kubernetes ExternalDNS for NGINX Ingress Controller Using F5 CIS with BIG-IP DNS [YouTube The missing piece - Kubernetes ExternalDNS ](https://www.youtube.com/watch?v=9HQ2XgL9YVI) Objectives Install ingress-nginx in a Kubernetes Cluster using ArgoCD Install Sealed Secrets in a Kubernetes Cluster using ArgoCD Deploy Sealed Secrets using imperative command Deploy Sealed Secrets using imperative command Using Sealed Secrets in a GitOps workflow. Setting up the kubeseal CLI Use Sealed Secret to hold bootstrap secrets for 1PasswordConnect and Cert-ManagerInstall Sealed Secrets in a Kubernetes Cluster using ArgoCDYou can use either the imperative command or the declarative yaml to deploy.If you don’t control the namespace where argocd is deplyed, you will likely needto use the imperative command, otherwise my preference is the declarative manifest.The reason I prefer the declarative approach is that ArgoCD can monitor a git repowith Application Manifests and automatically apply any changes.Deploy Sealed Secrets using imperative commandargocd app create sealed-secrets \\ --repo https://bitnami-labs.github.io/sealed-secrets \\ --helm-chart sealed-secrets \\ --revision v2.4.0 \\ --dest-namespace kubeseal \\ --dest-server 'https://kubernetes.default.svc' \\ --helm-set fullnameOverride=sealed-secrets-controller \\ --sync-option CreateNamespace=trueDeploy Sealed Secrets using declarative yamlapiVersion: argoproj.io/v1alpha1kind: Applicationmetadata: name: sealed-secrets namespace: argocdspec: project: default source: chart: sealed-secrets repoURL: 'https://bitnami-labs.github.io/sealed-secrets' targetRevision: v2.4.0 helm: parameters: - name: fullnameOverride value: sealed-secrets-controller destination: server: https://kubernetes.default.svc namespace: kubeseal syncPolicy: syncOptions: - CreateNamespace=trueUsing Sealed Secrets in a GitOps workflow.The main reason I am installing sealed secrets in my cluster is to enableme to put cluster bootstrapping secrets in a public repository. SealedSecrets use public key cryptography to provide this capability. The firstthing we will need to do is get the public key from the cluster we aretargeting for deployment. This plus the namespace and the name of thesecret are used to encrypt and salt the plaintext secret. This ensuresthat only the namespace in the cluster we intend deploy the secret candecrypt the secret.Setting up the kubeseal CLIThese days I am using homebrew to install most of my CLI tools. To installkubeseal, run the following command.brew install kubesealEnabling Offline EncryptionBy default, kubeseal will use your current kubernetes context to retrieve thecurrent sealing certificate from the target cluster. This may not be the bestsolution if you want to enable developers who are not granted access to thetarget cluster to be able to access the encryption certificate. One way to dothis is to use kubeseal to fetch an offline copy and publish it to a known URL.This allows the ops team to abstract the fact that the key is rotated every 30days from the developers. But because I am an actively lazy devops engineerwe are going to automate this with Kubernetes.Building a multi-arch Docker Image with Kubeseal and KubectlFROM golang:latest as buildLABEL maintainer=\"Esten Rye &lt;esten.rye+docker@ryezone.com&gt;\"WORKDIR /appARG VERSION=\"main\"RUN GO111MODULE=on CGO_ENABLED=0 go install -a github.com/bitnami-labs/sealed-secrets/cmd/kubeseal@${VERSION}RUN curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/$(uname -m)/kubectl\"RUN chmod 555 /app/kubectl /go/bin/kubesealFROM scratchWORKDIR /COPY --from=build /go/bin/kubeseal kubesealCOPY --from=build /app/kubectl kubectlCMD [ \"/kubeseal\", \"--version\" ]Building a" }, { "title": "Deploying Cert-Manager With ArgoCD", "url": "/posts/deploy-cert-manager-with-argocd/", "categories": "notes, argocd, certificates, kubernetes", "tags": "continuous-delivery, argocd, certificates, kubernetes", "date": "2022-07-20 19:35:00 -0500", "snippet": "References Integrating Kubernetes with 1Password for infrastructure secretsSource Code CD-HomeLab 1Password Connect Helm Chart 1Password OperatorDeploy and Configure CertManager Build a Helm C...", "content": "References Integrating Kubernetes with 1Password for infrastructure secretsSource Code CD-HomeLab 1Password Connect Helm Chart 1Password OperatorDeploy and Configure CertManager Build a Helm Chart to Wrap CertManager Helm Chart Include CertManager as a Dependency Add default values. Create a LetsEncrypt DNS-01 ClusterIssuer Create a Cloudflare API Token Secret Publish to a helm repository or git repository Deploy Helm Chart Imperatively using the ArgoCD CLIBuild a Helm Chart to Wrap CertManager Helm ChartCreate a new chart directory. This will hold our chart files.helm create cert-manager-installClean up the templates directory, delete everything except the_helpers.tpl filerm -rf \\ ./cert-manager-install/templates/tests \\ ./cert-manager-install/templates/*.txt \\ ./cert-manager-install/templates/*.yamlInclude CertManager as a DependencyThe first file we need to modify is the Chart.yaml file.This file will hold our chart metadata and most importantly,our chart dependencies. This is how we will instll cert-managerwithout needing to maintain our own chart to install it.apiVersion: v2name: cert-manager-installdescription: | A Helm chart for installing and configuring cert-manager in my home lab environment using Cloudflare, Lets Encrypt and the ACME DNS01 challenge Cluster Issuer.type: applicationversion: 0.1.0appVersion: \"v1.8.2\"dependencies: - name: cert-manager repository: https://charts.jetstack.io version: v1.8.2 condition: cert-manager.enabledOur cert-manager chart dependency has four key components. name specifies the name of the chart. repository specifies the url of the chart repository where the chart is hosted. version specifies which release of the chart to download condition specifies a chart value helm will interogate to determine if thedependency should be installed.At this point you should be able to build the chart dependencies using the following command:helm dependency build ./cert-manager-installThis will download a tgz file that contains the cert-manager chart dependency. Once this isdownloaded, you can test the templating using the following command:helm template my-cm ./cert-manager-install --set cert-manager.enabled=false# output should be emptyhelm template my-cm ./cert-manager-install --set cert-manager.enabled=true# output should generate all objects deployed by the cert-manager chart dependency.Add default valuesThe next file we need to modify is the values.yaml file. This file holds our defaultconfiguration for the helmchart. Delete everything in thid file and replace it with thefollowing:acme_email: ''acme_server: https://acme-v02.api.letsencrypt.org/directorycloudflare_api_token: ''cert-manager: enabled: false global: logLevel: 2 installCRDs: true podDnsPolicy: \"None\" podDnsConfig: nameservers: - \"1.1.1.1\" - \"1.0.0.1\"The first three keys acme_email, acme_server and cloudflare_api_token areall values used by the templates in the chart we are creating. Everything underthe cert-manager key are values fed into the cert-manager chart dependency.Create a LetsEncrypt DNS-01 ClusterIssuerNext, we are going to create a new template file called./cert-manager-install/templates/ClusterIssuer.yaml. This file will create ourClusterIssuer object that will configure cert-manager to use Cloudflare for DNS-01ACME Challenges.apiVersion: cert-manager.io/v1kind: ClusterIssuermetadata: name: labels:spec: acme: email: server: privateKeySecretRef: name: cloudflare-cluster-issuer-private-key-secret solvers: - dns01: cloudflare: apiTokenSecretRef: name: -cloudflare key: api-tokenCreate a Cloudflare API Token SecretLastly, we are going to create a new template file called.cert-manager-install/templates/secret.yaml that will create a secret object thatwill hold our Cloudflare API token.apiVersion: v1kind: Secretmetadata: name: -cloudflare labels:type: Opaquedata: api-token: Publish to a helm repository or git repositoryThe last step is to publish your helm chart to either a git or helm repository.Deploy Helm Chart Imperatively using the ArgoCD CLIUse the following command to deploy the chart using ArgoCDargocd app create cert-manager-config \\ --repo https://estenrye.github.io/helm-charts \\ --helm-chart cert-manager-install \\ --revision 0.1.0 \\ --dest-namespace default \\ --dest-server 'https://kubernetes.default.svc' \\ --helm-set acme_email=your-email@example.com \\ --helm-set cloudflare_api_token=your-cloudflare-api-token \\ --helm-set cert-manager.enabled=true" }, { "title": "Getting Started with Platform9 ArgoCD", "url": "/posts/getting-started-with-pf9-argocd/", "categories": "notes, argocd", "tags": "continuous-delivery, argocd", "date": "2022-07-17 16:02:00 -0500", "snippet": "Getting Started with Platform9’s Hosted ArgoCDPrerequisites Platform9: ArgoCD Quickstart Platform9: Login to ArgoCDReferencesDocumentation [ArgoCD Docs: Operator Manu...", "content": "Getting Started with Platform9’s Hosted ArgoCDPrerequisites Platform9: ArgoCD Quickstart Platform9: Login to ArgoCDReferencesDocumentation [ArgoCD Docs: Operator Manual Declarative Setup](https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup) Videos TechWorld with Nana: ArgoCD Tutorial for Beginners | GitOps CD for Kubernetes Install the argocd CLI and connect it to Platform9 ArgoCD brew install argocdPF9_INSTANCE=my-instance.platform9.playargocd login ${PF9_INSTANCE} --sso --grpc-web-root-path argocdAdding Repository Credentials Create a dedicated SSH Key for ArgoCDssh-keygen -t ecdsa-sha2-nistp256 -f ~/.ssh/argocd_id_ecdsa Add Key to GitHub as an authorized SSH Key. Add Private SSH Repository to ArgoCD: argocd repo add git@github.com:estenrye/cd-homelab.git --ssh-private-key-path ~/.ssh/argocd_id_ecdsaAdding a new project for managing ArgoCD configurationArgoCD can be managed declaritively, but we first need to tell it where to find its configuration. To do that, we first create a project that allows us todeploy to the argocd namespace in the in-cluster. The main reason we areseparating this into its own project is so we can control who has permissionsto deploy apps to the cluster.# Create the Projectargocd proj create argocd --description 'Project for Declaratively Managing ArgoCD'# Add Source and Destinationsargocd proj add-source argocd 'git@github.com:estenrye/cd-homelab.git'argocd proj add-destination argocd in-cluster argocd" }, { "title": "VS Code Server Kuberenetes Init Container", "url": "/posts/vscode-server-init-container-secrets/", "categories": "Platform9 Live", "tags": "VS Code Server, Kubernetes", "date": "2022-06-02 09:01:00 -0500", "snippet": "ProblemAt the end of my last live stream, I was struggling to get Docker-in-Docker into a running state in myVS Code Server pod. Core to my struggles was that my Kubernetes Secrets were not writab...", "content": "ProblemAt the end of my last live stream, I was struggling to get Docker-in-Docker into a running state in myVS Code Server pod. Core to my struggles was that my Kubernetes Secrets were not writable from insidethe pod. This breaks the automatic generation of Docker TLS Certificates used to secure Docker-in-Docker’sdocker socket. In this post, I am exploring initializing a Kubernetes Secret using an init container.What makes an init container special?Init containers are just like regular containers except that they start up before the regular containers do, do not support lifecycle,livenessProbe, readinessProbe, or startupProbe, and must sequentially run to completion before the Pod can be ready. For the problem above, they are ideal for the use case becausethey can be used to initialize Pod state that I would rather not specify defaults for in the values.yamlof my helm chart.Goals Add Smallstep CA as a deployment, using PV file backend as high availability is not required. Add a cert-manager Issuer for the namespace. Create a docker image that will generate the CA, Server and Client certificates for Docker-in-Dockerand publishes those certificates to Kubernetes Secrets. Add an init container to the VS Code Server deployment that calls the newly created image. Automate RenewalAdding Smallstep CA as a Helm Chart DependencyAdd the dependency to Chart.yamlChart.yamldependencies: - name: step-certificates repository: https://smallstep.github.io/helm-charts/ version: 1.18.2+20220324values.yamlstep-certificates: {}Generate config for Values.yaml Generate step-certificates values.yaml from step cli.step ca init --helm --deployment-type=standalone --name=vscode-server-ca --dns=step-ca.svc.cluster.local --address=:443 --provisioner=step-ca-provisioner &gt; values.yml Add Password to values.yml.PROVISIONER_PASSWORD='your-password-here'B64_PASSWORD=`echo -n ${PROVISIONER_PASSWORD} | base64`sed -i -e \"s|provisioner_password\\:.*\\$|provisioner_password\\: ${B64_PASSWORD}|\" values.ymlsed -i -e \"s|ca_password\\:.*\\$|ca_password\\: ${B64_PASSWORD}|\" values.ymlReferencesKubernetes Documentation Init ContainersHelm Documentation Helm Dependency Overriding Subchart Values from a Parent ChartBlog Posts Exploring Kubernetes Init Container, ConfigMap &amp; Secrets by John Turner, posted February 22, 2017 Automating TLS certificate management in Docker by Carl Tashian, Smallstep, posted October 25, 2021 Chart Dependencies, werf.io" }, { "title": "Platform9 Live - Stream Notes - VS Code Server - Kubeconfig", "url": "/posts/platform9-live-stream-notes/", "categories": "Platform9 Live", "tags": "VS-Code-Server, kubernetes", "date": "2022-06-01 21:45:00 -0500", "snippet": "VS Code Server Kube ConfigGoals for the Stream Modify my VS Code helm chart to setup a kubernetes role Full privileges to the vscode-server namespace. Link this role with a role bind...", "content": "VS Code Server Kube ConfigGoals for the Stream Modify my VS Code helm chart to setup a kubernetes role Full privileges to the vscode-server namespace. Link this role with a role binding to the service account generated by the helm chart. configure my kubectl and vs code kubernetes plugins to use the service account token. Creating a role for vscode-serverResources Referenced StackOverflow: Creating admin role for the namespace Kubernetes Documentation: Using RBAC AuthorizationCluster Role Binding DefinitionFor this role, I want full administrative permissions for the namespace.To generate the ClusterRoleBinding:k create clusterrolebinding \\ --serviceaccount=vscode-server:code-server-vscode-server \\ --clusterrole=admin admin-cluster-role-binding \\ --dry-run=client \\ -o yamlapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: creationTimestamp: null name: admin-cluster-role-bindingroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: adminsubjects:- kind: ServiceAccount name: code-server-vscode-server namespace: vscode-serverTurning it into a template that can be executed by the Helm ChartapiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: name: -binding labels:roleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: adminsubjects:- kind: ServiceAccount name: namespace: Building a Custom VS Code Server ImageIn order to use brew to install pre-commit and other tools, I need build-essentials.To start with, we are going to add build-essentials to the image and create a buildprocess.References How to use apt install correctly in your DockerfileCustomizing the imageFROM linuxserver/code-server:4.4.0ENV DEBIAN_FRONTEND=noninteractiveRUN apt update \\ &amp;&amp; apt install -y \\ build-essential \\ &amp;&amp; apt clean \\ &amp;&amp; rm -rf /var/lib/apt/lists/*Adding a reusable Github workflowname: Build and Publish Docker Imageon: workflow_call: inputs: DOCKER_IMAGENAME: required: true type: string DOCKER_USERNAME: required: true type: string PUSH_IMAGE: required: true type: boolean secrets: docker_password: required: truejobs: # define job to build and publish docker image build-and-push-docker-image: name: Build Docker image and push to repositories environment: Docker # run only when code is compiling and tests are passing runs-on: ubuntu-latest # steps to perform in job steps: - name: Checkout code uses: actions/checkout@v3 # setup Docker buld action - name: Set up Docker Buildx id: buildx uses: docker/setup-buildx-action@v1 - name: Login to DockerHub uses: docker/login-action@v1 with: username: $ password: $ - name: Build image and push to Docker Hub and GitHub Container Registry id: docker_build uses: docker/build-push-action@v2 with: # relative path to the place where source code with Dockerfile is located context: docker/$/$ # Note: tags has to be all lower-case tags: | $/$:latest # build on feature branches, push only on main branch push: $Using reusable Github Workflow# This is a basic workflow to help you get started with Actionsname: CI | Docker | estenrye/vscode-server# Controls when the workflow will runon: # Triggers the workflow on push or pull request events but only for the master branch push: paths: - docker/estenrye/vscode-server/** - .github/workflows/CI-estenrye-vscode-server.yml - .github/workflows/CI-Docker-Image-Build-Template.yml pull_request: branches: [ master ] paths: - docker/estenrye/vscode-server/** - .github/workflows/CI-estenrye-vscode-server.yml - .github/workflows/CI-Docker-Image-Build-Template.yml # Allows you to run this workflow manually from the Actions tab workflow_dispatch:# A workflow run is made up of one or more jobs that can run sequentially or in paralleljobs: # define job to build and publish docker image build-and-push-docker-image: name: Build Docker image and push to repositories uses: ./.github/workflows/CI-Docker-Image-Build-Template.yml with: DOCKER_IMAGENAME: vscode-server DOCKER_USERNAME: estenrye PUSH_IMAGE: $ secrets: docker_password: $" }, { "title": "Platform9 Live - Stream Notes - VS Code Server Docker-in-Docker", "url": "/posts/platform9-live-stream-notes/", "categories": "Platform9 Live", "tags": "VS-Code-Server, kubernetes", "date": "2022-06-01 21:45:00 -0500", "snippet": "Extensions Installed. GitHub.vscode-pull-request-github ms-kubernetes-tools.vscode-kubernetes-tools Dependencies: kubectl helm minikube ...", "content": "Extensions Installed. GitHub.vscode-pull-request-github ms-kubernetes-tools.vscode-kubernetes-tools Dependencies: kubectl helm minikube Helm Chart Todos Provide secret injection for ssh key mapped to /config/.ssh/id_rsa Add service account for managing Kubernetes cluster Allow deploy stuff to our local cluster. Allow us to use kubectl Image Customization Todos add ZSH add ZSH customizations install Python3 docker cliThings to Research How to run SSH Agent in the background. enables password protected ssh keys with vscode git ui. enables password-less ssh How to build containers using dockerAdding docker capabilities to My VS Code Server instance on KubernetesReferences Docker in Docker? Github: jpetazzo/dind Docker Hub: docker HowToGeek: How to Secure Docker’s TCP Socket With TLS Docker: Use the Docker command lineSummaryI want to build Docker images in my Kubernetes hosted VS Code Server instance.To do this, I am going to add a sidecar container which is running the Dockerdaemon using Docker-in-Docker. Then I will add the docker-cli to my VS CodeServer image and connect it to the Docker socket in the side car. This shouldallow me to build a docker image in a browser.Adding the Docker-in-Docker sidecar daemon container to the podSteps: Select Docker-in-Docker image. Create a new deployment in helm chart to deploy docker-in-docker. Add a service for the docker socket. Add a network policy to restrict access to the docker socket to containers within the same namespace. allow only vscode server pod to access dind pod. Step 1: Select Docker-in-Docker image. Browse the tags at [Docker Hub: library/docker Tags](https://hub.docker.com/_/docker/?tab=tags). I am selecting the dind-rootless tag, which will provide me a rootless installation of the Docker-in-Docker daemonusing the latest version of docker. The helm chart will provide a tag override in the values.yaml that will allowme to specify a more specific tag if I desire a more consistent deployment.Step 2: Create a new deployment in the VS Code Server helm chart. Got Docker-in-Docker deployed alongside vscode-server. not working yet. TLS Certificates are not being generated because Kubernetes Secrets mounted to paths are read-only. " }, { "title": "How to Add Front Matter to a post.", "url": "/posts/how-to-add-front-matter/", "categories": "notes", "tags": "jekyll", "date": "2022-05-30 02:02:00 -0500", "snippet": "Notes on editing posts:Add Front MatterEvery post to this website starts with the front matter. An example is below:---layout: posttitle: How to Add Front Matter to a post.date: 2022-05-30 02:02:0...", "content": "Notes on editing posts:Add Front MatterEvery post to this website starts with the front matter. An example is below:---layout: posttitle: How to Add Front Matter to a post.date: 2022-05-30 02:02:00 -0500categories: - notestags: - jekyll---Add ContentAfter adding the front matter, all that remains is to write the content in markdown.# Notes on editing posts:## Add Front Matter Every post to this website starts with the front matter. An example is below:## Add ContentAfter adding the front matter, all that remains is to write the content in markdown." } ]
